{"version":3,"sources":["components/Recipe.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Recipe","title","calories","image","info","ingredients","yieldFor","diet","source","totalTime","cuisineType","url","useState","show","setShow","handleClose","className","src","alt","class","href","target","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","map","ingredient","text","Footer","Search","require","config","console","log","process","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","recipe","key","label","Math","floor","healthLabel","dietLabels","yield","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e83aa911.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst Recipe = ({ title, calories, image, info, ingredients, diet, yieldFor, source, totalTime, cuisineType, url}) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col col-sm-4\">\r\n                <div className=\"card mb-5 shadow\">\r\n                    <div className=\"overflow\">\r\n                        <img src={image} className=\"card-img-top\" alt={title}></img>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{title}</h5>\r\n                        <div className=\"card-text\">{info}<hr />\r\n\r\n                            <p>\r\n                                Only {calories} Calories<br />\r\n                                <i className=\"fas fa-clock\"> </i> <strong> Cooking Time: </strong> {totalTime} mins<br />\r\n                                <i class=\"fas fa-utensils\"></i> <strong> Cuisine: </strong> {cuisineType}<br />\r\n                                <i class=\"fa-solid fa-up-right-from-square\"></i> <a href={url} target=\"_blank\">By {source}</a>\r\n                            </p>\r\n                        </div>\r\n                        <Button variant=\"primary\" onClick={handleShow}>\r\n                            View the ingredients\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title><h5 className=\"card-title\">{title} Ingredients</h5> </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p><strong>Calories: </strong>{calories}</p>\r\n                        <p><strong>Perfect dish for: </strong>{yieldFor}</p>\r\n                        <ol>\r\n                            {ingredients.map(ingredient => (\r\n                                <li>{ingredient.text}</li>\r\n                            ))}\r\n                        </ol>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Recipe;","import React, { useEffect, useState } from 'react';\r\nimport Recipe from './Recipe'\r\n\r\n\r\n\r\nfunction Search() {\r\n\r\n    require('dotenv').config()\r\n\r\n    console.log(process.env.REACT_APP_APP_ID);\r\n\r\n    const APP_ID = process.env.REACT_APP_APP_ID;\r\n    const APP_KEY = process.env.REACT_APP_APP_KEY;\r\n\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [query, setQuery] = useState(\"chicken\");\r\n\r\n    useEffect(() => {\r\n        getRecipes();\r\n    }, [query]);\r\n\r\n    const getRecipes = async () => {\r\n        const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&to=9`);\r\n        const data = await response.json();\r\n        setRecipes(data.hits);\r\n    };\r\n\r\n    const updateSearch = e => {\r\n        setSearch(e.target.value);\r\n    };\r\n\r\n    const getSearch = e => {\r\n        e.preventDefault();\r\n        setQuery(search);\r\n        setSearch(\"\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={getSearch} className=\"search-form\">\r\n                <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} />\r\n                <button className=\"search-button\" type=\"submit\">Search</button>\r\n            </form>\r\n            <div className=\"top-spacer\"></div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {recipes.map(recipe => (\r\n\r\n                        <Recipe\r\n                            key={recipe.recipe.label}\r\n                            title={recipe.recipe.label}\r\n                            calories={Math.floor(recipe.recipe.calories)}\r\n                            image={recipe.recipe.image}\r\n                            info={recipe.recipe.healthLabel}\r\n                            ingredients={recipe.recipe.ingredients}\r\n                            diet={recipe.recipe.dietLabels}\r\n                            yieldFor={recipe.recipe.yield}\r\n                            source={recipe.recipe.source}\r\n                            totalTime={recipe.recipe.totalTime}\r\n                            cuisineType={recipe.recipe.cuisineType}\r\n                            url={recipe.recipe.url}\r\n\r\n                        />\r\n\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport Search from './Search'\r\n\r\nfunction Header() {\r\n    return (\r\n        <>\r\n            <header>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h1 className=\"text-center\">Welcome to Grandma's Kitchen</h1>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <Search />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React,{useEffect, useState} from 'react';\nimport Header from './components/Header';\nimport './App.css';\n\nconst App = () => {\n\n  return(\n    <div className=\"App\">\n      <Header />\n    \n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}